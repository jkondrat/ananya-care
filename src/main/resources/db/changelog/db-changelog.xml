<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">

    <changeSet id="CARE #44" author="Łukasz Gąsior">
        <sql>
            ALTER TABLE dashboard_app.select_column DROP COLUMN name;
            ALTER TABLE dashboard_app.select_column ADD COLUMN computed_field_id int
                        REFERENCES dashboard_app.computed_field(computed_field_id);
        </sql>
    </changeSet>

    <changeSet id="CARE #86" author="Adrian Boguszewski">
        <addColumn tableName="computed_field" schemaName="dashboard_app">
            <column name="origin" type="boolean" defaultValue="t"/>
        </addColumn>
    </changeSet>
    
    <changeSet id="CARE #74" author="Adrian Boguszewski">
        <addColumn tableName="care_user" schemaName="dashboard_app">
            <column name="default_dashboard_id" type="integer" defaultValue="1"/>
        </addColumn>
        <addForeignKeyConstraint baseTableName="care_user" baseColumnNames="default_dashboard_id"
                                 constraintName="default_dashboard_id_fk"
                                 referencedTableName="dashboard"
                                 referencedColumnNames="dashboard_id"/>
    </changeSet>
    
    <changeSet id="CARE #37 (1)" author="Lech Różański">
        <sql>
            alter table dashboard_app.dw_query
                add column table_name character varying(100);

            update dashboard_app.dw_query set table_name = 'mother_case' where dw_query_id = '1';
            update dashboard_app.dw_query set table_name = 'delivery_mother_form' where dw_query_id = '2';

            drop table dashboard_app.fact cascade;
            drop table dashboard_app.complex_dw_query;
            drop table dashboard_app.simple_dw_query;
        </sql>
    </changeSet>

    <changeSet id="CARE #51" author="Adrian Boguszewski">
        <dropColumn tableName="language" columnName="defined" schemaName="dashboard_app"/>
    </changeSet>

    <changeSet id="CARE #37" author="Krzysztof Kaczmarczyk">
        <dropColumn columnName="area_id"
                    schemaName="dashboard_app"
                    tableName="indicator"
                />
        <addColumn tableName="indicator" schemaName="dashboard_app">
            <column name="area_level_id" type="bigint" defaultValue="1"/>
        </addColumn>
        <addNotNullConstraint columnName="area_level_id"
                              tableName="indicator"/>
        <addForeignKeyConstraint baseTableName="indicator" baseColumnNames="area_level_id"
                                 constraintName="fk_indicator_area_level"
                                 referencedColumnNames="level_id" referencedTableName="level"/>
    </changeSet>

    <changeSet id="CARE #66" author="Pawel Reise">
        <sql>
            alter table dashboard_app.care_user
            drop column password,
            drop column email,
            drop column salt;
            insert into dashboard_app.role (name) values ('ReadOnly');
        </sql>
    </changeSet>

    <changeSet id="CARE #25" author="Lech Różański">
        <sql>
            alter table dashboard_app.condition
                drop constraint condition_comparison_symbol_id_fk,
                drop column comparison_symbol_id;

            alter table dashboard_app.date_diff_comparison
                add column comparison_symbol_id integer not null,
                add constraint field_comparison_comparison_symbol_id foreign key (comparison_symbol_id)
                    references dashboard_app.comparison_symbol (comparison_symbol_id) match full
                    on update cascade on delete cascade,
                add column offset_1 integer default '0',
                add column offset_2 integer default '0';

            alter table dashboard_app.field_comparison
                add column comparison_symbol_id integer not null,
                add constraint field_comparison_comparison_symbol_id foreign key (comparison_symbol_id)
                    references dashboard_app.comparison_symbol (comparison_symbol_id) match full
                    on update cascade on delete cascade,
                add column offset_1 integer default '0',
                add column offset_2 integer default '0';

            alter table dashboard_app.value_comparison
                add column comparison_symbol_id integer not null default '1';

            update dashboard_app.value_comparison set comparison_symbol_id = '4' where value_comparison_id = '1';
            update dashboard_app.value_comparison set comparison_symbol_id = '1' where value_comparison_id = '2';

            alter table dashboard_app.value_comparison
                add constraint field_comparison_comparison_symbol_id foreign key (comparison_symbol_id)
                    references dashboard_app.comparison_symbol (comparison_symbol_id) match full
                    on update cascade on delete cascade;

            create table dashboard_app.date_range_comparison (
                date_range_comparison_id serial not null,
                condition_id integer not null,
                date_1 date not null,
                date_2 date not null,
                offset_1 integer default '0',
                creation_date timestamp without time zone,
                modification_date timestamp without time zone,
                constraint date_range_comparison_pk primary key (date_range_comparison_id),
                constraint date_range_comparison_condition_id foreign key (condition_id)
                    references dashboard_app.condition (condition_id) match full
                    on update cascade on delete cascade
            );

            create table dashboard_app.date_value_comparison (
                date_value_comparison_id serial not null,
                condition_id integer not null,
                comparison_symbol_id integer not null,
                value date not null,
                offset_1 integer default '0',
                creation_date timestamp without time zone,
                modification_date timestamp without time zone,
                constraint date_value_comparison_pk primary key (date_value_comparison_id),
                constraint date_value_comparison_condition_id foreign key (condition_id)
                    references dashboard_app.condition (condition_id) match full
                    on update cascade on delete cascade,
                constraint date_value_comparison_comparison_symbol_id foreign key (comparison_symbol_id)
                    references dashboard_app.comparison_symbol (comparison_symbol_id) match full
                    on update cascade on delete cascade
            );

            create table dashboard_app.enum_range_comparison (
                enum_range_comparison_id serial not null,
                condition_id integer not null,
                creation_date timestamp without time zone,
                modification_date timestamp without time zone,
                constraint enum_range_comparison_pk primary key (enum_range_comparison_id),
                constraint date_value_comparison_condition_id foreign key (condition_id)
                    references dashboard_app.condition (condition_id) match full
                    on update cascade on delete cascade
            );

            create table dashboard_app.enum_range_comparison_value (
                enum_range_comparison_value_id serial not null,
                enum_range_comparison_id integer not null,
                creation_date timestamp without time zone,
                modification_date timestamp without time zone,
                constraint enum_range_comparison_value_pk primary key (enum_range_comparison_value_id),
                constraint enum_range_comparison_value_enum_range_comparison foreign key (enum_range_comparison_id)
                    references dashboard_app.enum_range_comparison (enum_range_comparison_id) match full
                    on update cascade on delete cascade
            );
        </sql>
    </changeSet>

</databaseChangeLog>
