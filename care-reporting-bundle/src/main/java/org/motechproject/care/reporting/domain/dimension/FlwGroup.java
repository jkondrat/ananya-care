package org.motechproject.care.reporting.domain.dimension;

// Generated Jun 4, 2013 10:01:13 AM by Hibernate Tools 3.4.0.CR1

import org.hibernate.annotations.*;
import org.hibernate.annotations.CascadeType;
import org.motechproject.care.reporting.domain.measure.NewForm;
import org.motechproject.care.reporting.domain.measure.RegistrationChildForm;

import javax.persistence.*;
import javax.persistence.Entity;
import javax.persistence.Table;
import java.util.HashSet;
import java.util.Set;

/**
 * FlwGroup generated by hbm2java
 */
@Entity
@Table(name = "flw_group", uniqueConstraints = @UniqueConstraint(columnNames = "group_id"))
public class FlwGroup implements java.io.Serializable {

	private int id;
	private String groupId;
	private Boolean caseSharing;
	private String domain;
	private String awcCode;
	private String name;
	private Boolean reporting;
    private Set<Flw> flws;
	private Set<ChildCase> childCases = new HashSet<ChildCase>(0);
	private Set<RegistrationChildForm> registrationChildForms = new HashSet<RegistrationChildForm>(
			0);
	private Set<MotherCase> motherCases = new HashSet<MotherCase>(0);
	private Set<NewForm> newForms = new HashSet<NewForm>(0);

	public FlwGroup() {
	}

	public FlwGroup(int id) {
		this.id = id;
	}

	public FlwGroup(int id, String groupId, Boolean caseSharing, String domain,
                    String awcCode, String name, Boolean reporting,
                    Set<Flw> flws, Set<ChildCase> childCases,
                    Set<RegistrationChildForm> registrationChildForms,
                    Set<MotherCase> motherCases, Set<NewForm> newForms) {
		this.id = id;
		this.groupId = groupId;
		this.caseSharing = caseSharing;
		this.domain = domain;
		this.awcCode = awcCode;
		this.name = name;
		this.reporting = reporting;
        this.flws = flws;
        this.childCases = childCases;
		this.registrationChildForms = registrationChildForms;
		this.motherCases = motherCases;
		this.newForms = newForms;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "group_id", unique = true, length = 36)
	public String getGroupId() {
		return this.groupId;
	}

	public void setGroupId(String groupId) {
		this.groupId = groupId;
	}

	@Column(name = "case_sharing")
	public Boolean getCaseSharing() {
		return this.caseSharing;
	}

	public void setCaseSharing(Boolean caseSharing) {
		this.caseSharing = caseSharing;
	}

	@Column(name = "domain")
	public String getDomain() {
		return this.domain;
	}

	public void setDomain(String domain) {
		this.domain = domain;
	}

	@Column(name = "awc_code")
	public String getAwcCode() {
		return this.awcCode;
	}

	public void setAwcCode(String awcCode) {
		this.awcCode = awcCode;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "reporting")
	public Boolean getReporting() {
		return this.reporting;
	}

	public void setReporting(Boolean reporting) {
		this.reporting = reporting;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flwGroup")
	public Set<ChildCase> getChildCases() {
		return this.childCases;
	}

    @ManyToMany(mappedBy="flwGroups")
    @Cascade(value = {CascadeType.SAVE_UPDATE})
    public Set<Flw> getFlws() {
        return flws;
    }

    public void setFlws(Set<Flw> flws) {
        this.flws = flws;
    }

    public void setChildCases(Set<ChildCase> childCases) {
		this.childCases = childCases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flwGroup")
	public Set<RegistrationChildForm> getRegistrationChildForms() {
		return this.registrationChildForms;
	}

	public void setRegistrationChildForms(
			Set<RegistrationChildForm> registrationChildForms) {
		this.registrationChildForms = registrationChildForms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flwGroup")
	public Set<MotherCase> getMotherCases() {
		return this.motherCases;
	}

	public void setMotherCases(Set<MotherCase> motherCases) {
		this.motherCases = motherCases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flwGroup")
	public Set<NewForm> getNewForms() {
		return this.newForms;
	}

	public void setNewForms(Set<NewForm> newForms) {
		this.newForms = newForms;
	}

}
